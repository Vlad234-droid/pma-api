<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.2.xsd">


    <changeSet id="1" author="ypashynskyi">
        <sql>
            <![CDATA[
            insert into pm_timeline_point
                with timeline_point_enriched as (
                    select tp.cycle_uuid,
                           tp.colleague_cycle_uuid,
                           json_extract_path_text(tp.timeline_point, 'code')                  as timeline_code,
                           json_extract_path_text(tp.timeline_point, 'description')           as timeline_description,
                           upper(json_extract_path_text(tp.timeline_point, 'type'))           as element_type_code,
                           upper(json_extract_path_text(tp.timeline_point, 'reviewType'))     as review_type_code,
                           json_extract_path_text(tp.timeline_point, 'properties', 'pm_type') as props_type,
                           json_extract_path_text(tp.timeline_point, 'properties')            as properties,
                           tp.timeline_point
                    from (select c.uuid                                                               as cycle_uuid,
                                 cc.uuid                                                              as colleague_cycle_uuid,
                                 json_array_elements((metadata -> 'cycle' -> 'timelinePoints')::json) as timeline_point
                          from pm_cycle c
                                   inner join pm_colleague_cycle cc
                                              on c.uuid = cc.cycle_uuid
                         ) as tp)
                select md5(random()::text || clock_timestamp()::text)::uuid as uuid,
                       tpe.colleague_cycle_uuid,
                       coalesce(tpe.review_type_code, tpe.timeline_code)    as code,
                       tpe.timeline_description                             as description,
                       et.id                                                as element_type_id,
                       to_date(json_extract_path_text(tpe.timeline_point, 'properties',
                                                      concat('pm_', tpe.props_type, '_start_time')),
                               'YYYY-MM-DD')                                as start_time,
                       null                                                 as end_time,
                       tpe.properties::jsonb,
                       case
                           when now() > to_date(json_extract_path_text(tpe.timeline_point, 'properties',
                                                                       concat('pm_', tpe.props_type, '_start_time')),
                                                'YYYY-MM-DD') then 7
                           else 8 end                                       as status_id
                from timeline_point_enriched tpe
                         inner join pm_element_type et
                                    on (tpe.element_type_code = et.code);
            ]]>
        </sql>
        <rollback>
            truncate table pm_timeline_point cascade;
        </rollback>
    </changeSet>

</databaseChangeLog>
