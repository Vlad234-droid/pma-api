<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tesco.pma.colleague.security.dao.AccountManagementDAO">

    <resultMap id="accountResultMap" type="com.tesco.pma.colleague.security.domain.Account">
        <result property="name" column="name"/>
        <result property="type" column="type_id"
                typeHandler="com.tesco.pma.dao.utils.DictionaryItemTypeHandler"
                javaType="com.tesco.pma.colleague.security.domain.AccountType"/>
        <result property="status" column="status_id"
                typeHandler="com.tesco.pma.dao.utils.DictionaryItemTypeHandler"
                javaType="com.tesco.pma.colleague.security.domain.AccountStatus"/>
        <result property="iamId" column="iam_id"/>
        <result property="lastLogin" column="last_login"/>
        <result property="employeeNumber" column="employee_number"/>
    </resultMap>

    <resultMap id="accountsResultMap" type="com.tesco.pma.colleague.security.domain.Account"
               extends="accountResultMap">
        <collection property="roles" ofType="com.tesco.pma.colleague.security.domain.Role">
            <result property="id" column="role_id"/>
            <result property="code" column="role_code"/>
        </collection>
    </resultMap>

    <select id="findAccountByName" resultMap="accountResultMap">
        SELECT * FROM pm_account WHERE name = #{name}
    </select>

    <select id="getCount" resultType="long">
        SELECT COUNT(*)
        FROM (SELECT a.name            as name,
                     a.type_id         as type_id,
                     a.status_id       as status_id,
                     a.iam_id          as iam_id,
                     a.employee_number as employee_number
              FROM pm_account a) aa
        WHERE 1 = 1;
    </select>

    <select id="get" resultMap="accountsResultMap">
        SELECT a.name            as name,
               a.type_id         as type_id,
               a.status_id       as status_id,
               a.iam_id          as iam_id,
               a.employee_number as employee_number,
               a.last_login      as last_login,
               r.id              as role_id,
               r.code            as role_code
        FROM pm_account a
                 LEFT JOIN pm_account_role ar on a.id = ar.account_id
                 LEFT JOIN pm_role r on ar.role_id = r.id
        ORDER BY a.name
        <if test="requestQuery.limit != null">
            LIMIT #{requestQuery.limit}
            <if test="requestQuery.offset != null">
                OFFSET #{requestQuery.offset}
            </if>
        </if>
        ;
    </select>

    <insert id="create">
        INSERT INTO pm_account (name, iam_id, status_id, type_id, last_login)
        VALUES (#{name},
                #{iamId},
                #{status, typeHandler=com.tesco.pma.dao.utils.DictionaryItemTypeHandler, javaType=com.tesco.pma.colleague.security.domain.AccountStatus},
                #{type, typeHandler=com.tesco.pma.dao.utils.DictionaryItemTypeHandler, javaType=com.tesco.pma.colleague.security.domain.AccountType},
                #{now})
    </insert>

    <update id="disableAccount" flushCache="true">
        UPDATE pm_account
        SET status_id = #{status, typeHandler=com.tesco.pma.dao.utils.DictionaryItemTypeHandler, javaType=com.tesco.pma.colleague.security.domain.AccountStatus},
            last_login = #{now}
        WHERE name = #{name}
    </update>

    <update id="enableAccount" flushCache="true">
        UPDATE pm_account
        SET status_id = #{status, typeHandler=com.tesco.pma.dao.utils.DictionaryItemTypeHandler, javaType=com.tesco.pma.colleague.security.domain.AccountStatus},
            last_login = #{now}
        WHERE name = #{name}
    </update>

    <insert id="assignRole" flushCache="true">
        INSERT INTO pm_account_role (account_id, role_id)
        VALUES (#{accountId},
                #{roleId})
    </insert>

    <delete id="removeRole" flushCache="true">
        DELETE
        FROM pm_account_role
        WHERE account_id = #{accountId}
          AND role_id = #{roleId}
    </delete>

</mapper>