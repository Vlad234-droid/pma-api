<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tesco.pma.review.dao.ObjectiveSharingDAO">

    <resultMap id="reviewResultMap" type="com.tesco.pma.review.domain.Review">
        <id property="uuid" column="uuid"/>
        <result property="colleagueUuid" column="colleague_uuid"/>
        <result property="performanceCycleUuid" column="performance_cycle_uuid"/>
        <result property="type" column="type_id" typeHandler="com.tesco.pma.dao.utils.DictionaryItemTypeHandler"
                javaType="com.tesco.pma.cycle.api.PMReviewType"/>
        <result property="number" column="number"/>
        <result property="properties" column="properties"
                typeHandler="com.tesco.pma.dao.utils.jsonb.MapJsonbTypeHandler"
                javaType="com.tesco.pma.api.MapJson"/>
        <result property="status" column="status_id"
                typeHandler="com.tesco.pma.dao.utils.DictionaryItemTypeHandler"
                javaType="com.tesco.pma.cycle.api.PMReviewStatus"/>
        <result property="changeStatusReason" column="change_reason"/>
    </resultMap>

    <sql id="changeStatusReasonQuery">
        select rcsh.review_uuid,
               rcsh.new_status_id,
               rcsh.updated_time,
               rcsh.change_reason,
               row_number() over (partition by r.uuid order by rcsh.updated_time desc) rn
        from review_change_status_hi rcsh
                 inner join review r
                            on (r.uuid = rcsh.review_uuid)
    </sql>

    <sql id="reviewQuery">
        SELECT r.uuid,
               r.colleague_uuid,
               r.performance_cycle_uuid,
               r.type_id,
               r.number,
               r.properties,
               r.status_id,
               csr.change_reason
        FROM review r
                 left join change_status_reason csr
                           on (r.uuid = csr.review_uuid
                               and r.status_id = csr.new_status_id
                               and csr.rn = 1)
    </sql>

    <insert id="shareObjectives">
        INSERT INTO shared_objective(colleague_uuid, cycle_uuid)
        VALUES (#{colleagueUuid}, #{cycleUuid})
    </insert>

    <delete id="stopSharingObjectives">
        DELETE
        FROM shared_objective
        WHERE colleague_uuid = #{colleagueUuid}
          AND cycle_uuid = #{cycleUuid}
    </delete>

    <select id="isColleagueShareObjectives" resultType="boolean">
        SELECT CASE
                   WHEN (EXISTS(SELECT true
                                FROM shared_objective
                                WHERE colleague_uuid = #{colleagueUuid}
                                  AND cycle_uuid = #{cycleUuid}))
                       THEN true
                   ELSE false
                   END;
    </select>

    <select id="getReviewsByParams" resultMap="reviewResultMap">
        with change_status_reason as (
        <include refid="changeStatusReasonQuery"/>
        WHERE r.colleague_uuid = #{colleagueUuid}
            AND r.performance_cycle_uuid = #{cycleUuid}
            AND r.type_id = #{type.id}
            AND r.status_id = #{status.id})
        <include refid="reviewQuery"/>
        WHERE r.colleague_uuid = #{colleagueUuid}
            AND r.performance_cycle_uuid = #{cycleUuid}
            AND r.type_id = #{type.id}
            AND r.status_id = #{status.id}
    </select>
</mapper>