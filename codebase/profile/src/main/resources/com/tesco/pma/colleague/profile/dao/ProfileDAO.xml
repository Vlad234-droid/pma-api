<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tesco.pma.colleague.profile.dao.ProfileDAO">

    <resultMap id="colleagueMap" type="com.tesco.pma.colleague.profile.domain.ColleagueEntity">
        <id column="uuid" property="uuid"/>
        <result column="first_name" property="firstName"/>
        <result column="middle_name" property="middleName"/>
        <result column="last_name" property="lastName"/>
        <result column="email" property="email"/>
        <result column="primary_entity" property="primaryEntity"/>
        <result column="salary_frequency" property="salaryFrequency"/>
        <result column="iam_source" property="iamSource"/>
        <result column="iam_id" property="iamId"/>
        <result column="manager_uuid" property="managerUuid"/>
        <result column="employment_type" property="employmentType"/>
        <result column="hire_date" property="hireDate"/>
        <result column="leaving_date" property="leavingDate"/>
        <result column="is_manager" property="manager"/>
        <association property="job" autoMapping="true" columnPrefix="j_"/>
        <association property="country" autoMapping="true" columnPrefix="co_"/>
        <association property="workLevel" autoMapping="true" columnPrefix="wl_"/>
        <association property="department" autoMapping="true" columnPrefix="d_"/>
    </resultMap>

    <select id="findColleaguesByTypes" resultMap="colleagueMap">
        SELECT c.uuid,
        c.first_name,
        c.middle_name,
        c.last_name,
        c.email,
        c.primary_entity,
        c.salary_frequency,
        c.iam_source,
        c.iam_id,
        c.manager_uuid,
        c.employment_type,
        c.hire_date,
        c.leaving_date,
        c.is_manager,
        j.id as j_id,
        j.code as j_code,
        j.name as j_name,
        j.cost_category as j_costCategory,
        co.code as co_code,
        co.name as co_name,
        wl.code as wl_code,
        wl.name as wl_name,
        d.id as d_id,
        d.name as d_name,
        d.business_type as d_businessType
        FROM colleague c
        JOIN job j ON j.id = c.job_id
        JOIN country co ON co.code = c.country_code
        JOIN work_level wl ON wl.code = c.work_level
        JOIN department d ON d.id = c.department_id
        <where>
            <choose>
                <when test="key == 'group'">
                    wl.code IN ('WL3', 'WL4', 'WL5')
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type != 'Bank'
                </when>
                <when test="key == 'group/ho_c'">
                    wl.code IN ('WL3', 'WL4', 'WL5')
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type IN ('Office', 'office','Store','Distribution')
                </when>
                <when test="key == 'group/ho_c/salaried'">
                    wl.code IN ('WL3', 'WL4', 'WL5')
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type IN ('Office', 'office','Store','Distribution')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'group/ho_c/salaried/wl3'">
                    wl.code = 'WL3'
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type IN ('Office', 'office','Store','Distribution')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'group/ho_c/salaried/wl4'">
                    wl.code = 'WL4'
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type IN ('Office', 'office','Store','Distribution')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'group/ho_c/salaried/wl5'">
                    wl.code = 'WL5'
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type IN ('Office', 'office','Store','Distribution')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk'">
                    co.code = 'GB'
                </when>
                <when test="key == 'uk/ho'">
                    co.code = 'GB'
                    AND d.business_type IN ('Office', 'office')
                </when>
                <when test="key == 'uk/ho/salaried'">
                    co.code = 'GB'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk/ho/salaried/wl1'">
                    co.code = 'GB'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'uk/ho/salaried/wl2'">
                    co.code = 'GB'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk/channels'">
                    co.code = 'UK'
                    AND d.business_type = 'Store'
                </when>
                <when test="key == 'uk/channels/salaried'">
                    co.code = 'UK'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk/channels/salaried/wl2_on_bonus'">
                    co.code = 'UK'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk/channels/salaried/wl2_tl'">
                    co.code = 'UK'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                    AND j.name IN ('Team Leader', 'Shift Leader')
                </when>
                <when test="key == 'uk/channels/salaried/wl1'">
                    co.code = 'UK'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'uk/channels/hp'">
                    co.code = 'UK'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'HOURLY'
                </when>
                <when test="key == 'uk/channels/hp/colleague'">
                    co.code = 'UK'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'HOURLY'
                </when>
                <when test="key == 'roi/ho_c'">
                    co.code = 'IE'
                    AND d.business_type IN ('Office', 'office', 'stores')
                </when>
                <when test="key == 'roi/ho_c/salaried'">
                    co.code = 'IE'
                    AND d.business_type IN ('Office', 'office', 'stores')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'roi/ho_c/salaried/wl1'">
                    co.code = 'IE'
                    AND d.business_type IN ('Office', 'office', 'stores')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'roi/ho_c/salaried/wl2'">
                    co.code = 'IE'
                    AND d.business_type IN ('Office', 'office', 'stores')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'india'">
                    co.code = 'IN'
                </when>
                <when test="key == 'india/ho'">
                    co.code = 'IN'
                    AND d.business_type IN ('Office', 'office')
                </when>
                <when test="key == 'india/ho/salaried'">
                    co.code = 'IN'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'india/ho/salaried/wl1'">
                    co.code = 'IN'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'india/ho/salaried/wl2'">
                    co.code = 'IN'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk_m'">
                    c.iam_source = 'UKMaintenance'
                </when>
                <when test="key == 'uk_m/salaried'">
                    c.iam_source = 'UKMaintenance'
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk_m/salaried/wl1'">
                    c.iam_source = 'UKMaintenance'
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'uk_m/salaried/wl2'">
                    c.iam_source = 'UKMaintenance'
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk_h_c'">
                    c.iam_source = 'UK Hospitality'
                </when>
                <when test="key == 'uk_h_c/ho'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                </when>
                <when test="key == 'uk_h_c/ho/salaried'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk_h_c/ho/salaried/wl1'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'uk_h_c/ho/salaried/wl2'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk_h_c/ho/hp'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'HOURLY'
                </when>
                <when test="key == 'uk_h_c/ho/hp/colleague'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'HOURLY'
                </when>
                <when test="key == 'uk_d'">
                    d.business_type IN ('depot', 'distribution')
                </when>
                <when test="key == 'uk_d/salaried'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk_d/salaried/wl1'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'uk_d/salaried/wl2'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk_d/hp_none_prod'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'HOURLY'
                    AND j.name IN ('Warehouse clerical', 'People advisor', 'Planning clerk', 'People safety trainer',
                    'Warehouse service co-ordinator','Store service co-ordinator')
                </when>
                <when test="key == 'uk_d/hp_none_prod/colleague'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'HOURLY'
                    AND j.name IN ('Warehouse clerical', 'People advisor', 'Planning clerk', 'People safety trainer',
                    'Warehouse service co-ordinator','Store service co-ordinator')
                </when>
                <when test="key == 'uk_d/hp_prod'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'HOURLY'
                    AND j.name = 'Warehouse operative'
                </when>
                <when test="key == 'uk_d/hp_prod/colleague'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'HOURLY'
                    AND j.name = 'Warehouse operative'
                </when>
                <when test="key == 'tb'">
                    c.primary_entity = 'Tesco Bank'
                </when>
                <when test="key == 'tb/ho'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                </when>
                <when test="key == 'tb/ho/salaried'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'tb/ho/salaried/wl1'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'tb/ho/salaried/wl2'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'tb/ho/salaried/wl3'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL3'
                </when>
                <when test="key == 'tb/ho/salaried/wl4'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL4'
                </when>
                <when test="key == 'tb/ho/salaried/wl5'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL5'
                </when>

                <otherwise>1!=1</otherwise>
            </choose>
        </where>
    </select>

    <select id="getColleague" resultMap="colleagueMap">
        SELECT c.uuid,
               c.first_name,
               c.middle_name,
               c.last_name,
               c.email,
               c.primary_entity,
               c.salary_frequency,
               c.iam_source,
               c.iam_id,
               c.manager_uuid,
               c.employment_type,
               c.hire_date,
               c.leaving_date,
               c.is_manager,
               j.id            as j_id,
               j.code          as j_code,
               j.name          as j_name,
               j.cost_category as j_costCategory,
               co.code         as co_code,
               co.name         as co_name,
               wl.code         as wl_code,
               wl.name         as wl_name,
               d.id            as d_id,
               d.name          as d_name,
               d.business_type as d_businessType
        FROM colleague c
                 JOIN job j ON j.id = c.job_id
                 JOIN country co ON co.code = c.country_code
                 JOIN work_level wl ON wl.code = c.work_level
                 JOIN department d ON d.id = c.department_id
        WHERE c.uuid = #{colleagueUuid}
    </select>

    <select id="getColleagueByIamId" resultMap="colleagueMap">
        SELECT c.uuid,
               c.first_name,
               c.middle_name,
               c.last_name,
               c.email,
               c.primary_entity,
               c.salary_frequency,
               c.iam_source,
               c.iam_id,
               c.manager_uuid,
               c.employment_type,
               c.hire_date,
               c.leaving_date,
               c.is_manager,
               j.id            as j_id,
               j.code          as j_code,
               j.name          as j_name,
               j.cost_category as j_costCategory,
               co.code         as co_code,
               co.name         as co_name,
               wl.code         as wl_code,
               wl.name         as wl_name,
               d.id            as d_id,
               d.name          as d_name,
               d.business_type as d_businessType
        FROM colleague c
                 JOIN job j ON j.id = c.job_id
                 JOIN country co ON co.code = c.country_code
                 JOIN work_level wl ON wl.code = c.work_level
                 JOIN department d ON d.id = c.department_id
        WHERE c.iam_id = #{iamId}
    </select>

    <insert id="saveWorkLevel" flushCache="true">
        INSERT INTO work_level(code, name)
        VALUES (#{workLevel.code}, #{workLevel.name}) ON CONFLICT(code) DO NOTHING
    </insert>

    <insert id="saveCountry" flushCache="true">
        INSERT INTO country(code, name)
        VALUES (#{country.code}, #{country.name}) ON CONFLICT(code) DO NOTHING
    </insert>

    <insert id="saveDepartment" flushCache="true">
        INSERT INTO department(id, name, business_type)
        VALUES (#{department.id}, #{department.name}, #{department.businessType}) ON CONFLICT(id) DO NOTHING
    </insert>

    <insert id="saveJob" flushCache="true">
        INSERT INTO job(id, code, name, cost_category)
        VALUES (#{job.id}, #{job.code}, #{job.name}, #{job.costCategory}) ON CONFLICT(id) DO NOTHING
    </insert>

    <insert id="saveColleague" flushCache="true">
        INSERT INTO colleague(uuid, first_name, middle_name, last_name, email, primary_entity,
                              salary_frequency, iam_source, iam_id, manager_uuid, employment_type,
                              hire_date, leaving_date, is_manager, job_id, country_code, work_level, department_id)
        VALUES (#{colleague.uuid}, #{colleague.firstName}, #{colleague.middleName}, #{colleague.lastName},
                #{colleague.email}, #{colleague.primaryEntity}, #{colleague.salaryFrequency}, #{colleague.iamSource},
                #{colleague.iamId}, #{colleague.managerUuid}, #{colleague.employmentType}, #{colleague.hireDate},
                #{colleague.leavingDate}, #{colleague.manager}, #{colleague.job.id}, #{colleague.country.code},
                #{colleague.workLevel.code}, #{colleague.department.id}) ON CONFLICT(uuid) DO
        UPDATE
            SET first_name = #{colleague.firstName}, middle_name = #{colleague.middleName}, last_name = #{colleague.lastName},
            email = #{colleague.email}, primary_entity = #{colleague.primaryEntity}, salary_frequency = #{colleague.salaryFrequency},
            iam_source = #{colleague.iamSource}, iam_id = #{colleague.iamId}, manager_uuid = #{colleague.managerUuid},
            employment_type = #{colleague.employmentType}, hire_date = #{colleague.hireDate}, leaving_date = #{colleague.leavingDate},
            is_manager = #{colleague.manager}, job_id = #{colleague.job.id}, country_code = #{colleague.country.code},
            work_level = #{colleague.workLevel.code}, department_id = #{colleague.department.id}
    </insert>

    <update id="updateColleagueManager" flushCache="true">
        UPDATE colleague
        SET manager_uuid= #{managerUuid}
        WHERE uuid = #{colleagueUuid}
    </update>

    <select id="isColleagueExists" resultType="boolean">
        SELECT CASE
                   WHEN (EXISTS(SELECT true
                                FROM colleague
                                WHERE uuid = #{uuid}))
                       THEN true
                   ELSE false
                   END;
    </select>
</mapper>