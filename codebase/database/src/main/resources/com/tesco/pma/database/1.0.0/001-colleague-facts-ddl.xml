<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.2.xsd">

    <preConditions>
        <dbms type="postgresql"/>
    </preConditions>

    <changeSet author="ypashynskyi" id="1">
        <createTable tableName="abstract_colleague"
                     remarks="Abstract dictionary of colleagues">
            <column name="uuid" type="${uuid_type}"
                    remarks="A unique identifier for every colleague. It is the user id present in Identity.">
                <constraints nullable="false"/>
            </column>
            <column name="employee_id" type="VARCHAR(100)"
                    remarks="EmployeeId of the colleague.">
                <constraints nullable="false"/>
            </column>
            <column name="country_code" type="CHAR(2)"
                    remarks="ISO 3166-1 alpha-2 country code.">
                <constraints nullable="false"/>
            </column>
            <column name="title" type="varchar(10)"
                    remarks="This value denotes the salutation of a colleague."/>
            <column name="first_name" type="varchar(100)"
                    remarks="This value denotes the first name of a colleague."/>
            <column name="middle_name" type="varchar(100)"
                    remarks="This value denotes the middle name of a colleague."/>
            <column name="last_name" type="varchar(100)"
                    remarks="This value denotes the last name of a colleague."/>
            <column name="preferred_name" type="varchar(100)"
                    remarks="This value denotes the preferred name of a colleague."/>
            <column name="date_of_birth" type="date"
                    remarks="This value denotes the date of birth of a colleague."/>
            <column name="gender" type="char(1)"
                    remarks="This value denotes the gender of a colleague.(M, F, U)"/>
            <column name="email" type="varchar(100)"
                    remarks="This value denotes the work email of a colleague."/>
            <column name="work_phone_number" type="varchar(100)"
                    remarks="This value denotes the work phone number of a colleague."/>
            <column name="hire_date" type="date"
                    remarks="This value denotes the date when a colleague was hired."/>
            <column name="leaving_date" type="date"
                    remarks="This value denotes the date when a colleague is setup as a Tesco leaver."/>
            <column name="original_source" type="jsonb"
                    remarks="The result of Colleague Facts API request."/>
            <column name="is_synced" type="boolean"
                    remarks="Whether the colleague and hierarchy is synced or not."/>
        </createTable>
    </changeSet>

    <changeSet author="ypashynskyi" id="2">
        <sql>
            create table colleague
            (
            )
            inherits (abstract_colleague);
        </sql>
        <rollback>
            drop table colleague;
        </rollback>
    </changeSet>

    <changeSet author="ypashynskyi" id="3">
        <addPrimaryKey
                tableName="colleague"
                columnNames="uuid"/>
    </changeSet>

    <changeSet author="ypashynskyi" id="4">
        <sql>
            create table colleague_hi
            (
            op_name char(1) not null,
            op_user text not null,
            op_timestamp TIMESTAMPTZ not null
            )
            inherits (abstract_colleague);
        </sql>
        <rollback>
            drop table colleague_hi;
        </rollback>
    </changeSet>

    <changeSet author="ypashynskyi" id="5">
        <addPrimaryKey
                tableName="colleague_hi"
                columnNames="uuid,op_timestamp"/>
    </changeSet>

    <changeSet author="ypashynskyi" id="6">
        <createTable tableName="abstract_job"
                     remarks="Abstract dictionary of jobs">
            <column name="id" type="varchar(100)"
                    remarks="HCM job identifier of a colleague.">
                <constraints nullable="false"/>
            </column>
            <column name="code" type="varchar(100)"
                    remarks="This is the code to identify the job a colleague belongs to."/>
            <column name="name" type="varchar(200)"
                    remarks="HCM job name of a colleague."/>
            <column name="cost_category" type="varchar(200)"
                    remarks="This field specifies the job cost category for payroll costing."/>
        </createTable>
    </changeSet>

    <changeSet author="ypashynskyi" id="7">
        <sql>
            create table job
            (
            )
            inherits (abstract_job);
        </sql>
        <rollback>
            drop table job;
        </rollback>
    </changeSet>

    <changeSet author="ypashynskyi" id="8">
        <addPrimaryKey
                tableName="job"
                columnNames="id"/>
    </changeSet>

    <changeSet author="ypashynskyi" id="9">
        <sql>
            create table job_hi
            (
            op_name char(1) not null,
            op_user text not null,
            op_timestamp TIMESTAMPTZ not null
            )
            inherits (abstract_job);
        </sql>
        <rollback>
            drop table job_hi;
        </rollback>
    </changeSet>

    <changeSet author="ypashynskyi" id="10">
        <addPrimaryKey
                tableName="job_hi"
                columnNames="id,op_timestamp"/>
    </changeSet>

    <changeSet author="ypashynskyi" id="11">
        <createTable tableName="abstract_position"
                     remarks="Abstract dictionary of positions">
            <column name="id" type="varchar(100)"
                    remarks="This is internal Id number for HCM colleagues.">
                <constraints nullable="false"/>
            </column>
            <column name="code" type="varchar(100)"
                    remarks="Short form for the position. Used for identification purposes."/>
            <column name="name" type="varchar(200)"
                    remarks="HCM position name of a colleague."/>
            <column name="team_name" type="varchar(200)"
                    remarks="HCM team name of a colleague."/>
        </createTable>
    </changeSet>

    <changeSet author="ypashynskyi" id="12">
        <sql>
            create table position
            (
            )
            inherits (abstract_position);
        </sql>
        <rollback>
            drop table position;
        </rollback>
    </changeSet>

    <changeSet author="ypashynskyi" id="13">
        <addPrimaryKey
                tableName="position"
                columnNames="id"/>
    </changeSet>

    <changeSet author="ypashynskyi" id="14">
        <sql>
            create table position_hi
            (
            op_name char(1) not null,
            op_user text not null,
            op_timestamp TIMESTAMPTZ not null
            )
            inherits (abstract_position);
        </sql>
        <rollback>
            drop table position_hi;
        </rollback>
    </changeSet>

    <changeSet author="ypashynskyi" id="15">
        <addPrimaryKey
                tableName="position_hi"
                columnNames="id,op_timestamp"/>
    </changeSet>

    <changeSet author="ypashynskyi" id="16">
        <createTable tableName="abstract_grade"
                     remarks="Abstract dictionary of grades">
            <column name="id" type="varchar(100)"
                    remarks="HCM grade identifier of a colleague.">
                <constraints nullable="false"/>
            </column>
            <column name="code" type="varchar(100)"
                    remarks="The grade the colleague is assigned to based on their position."/>
        </createTable>
    </changeSet>

    <changeSet author="ypashynskyi" id="17">
        <sql>
            create table grade
            (
            )
            inherits (abstract_grade);
        </sql>
        <rollback>
            drop table grade;
        </rollback>
    </changeSet>

    <changeSet author="ypashynskyi" id="18">
        <addPrimaryKey
                tableName="grade"
                columnNames="id"/>
    </changeSet>

    <changeSet author="ypashynskyi" id="19">
        <sql>
            create table grade_hi
            (
            op_name char(1) not null,
            op_user text not null,
            op_timestamp TIMESTAMPTZ not null
            )
            inherits (abstract_grade);
        </sql>
        <rollback>
            drop table grade_hi;
        </rollback>
    </changeSet>

    <changeSet author="ypashynskyi" id="20">
        <addPrimaryKey
                tableName="grade_hi"
                columnNames="id,op_timestamp"/>
    </changeSet>

    <changeSet author="ypashynskyi" id="21">
        <createTable tableName="abstract_department"
                     remarks="Abstract dictionary of departments">
            <column name="id" type="varchar(100)"
                    remarks="HCM department identifier of a colleague.">
                <constraints nullable="false"/>
            </column>
            <column name="name" type="varchar(200)"
                    remarks="HCM department name of a colleague."/>
            <column name="business_type" type="varchar(100)"
                    remarks="This field specifies business type of a colleague's department."/>
            <column name="parent_id" type="varchar(100)"
                    remarks="Parent HCM department identifier of a colleague."/>
        </createTable>
    </changeSet>

    <changeSet author="ypashynskyi" id="22">
        <sql>
            create table department
            (
            )
            inherits (abstract_department);
        </sql>
        <rollback>
            drop table department;
        </rollback>
    </changeSet>

    <changeSet author="ypashynskyi" id="23">
        <addPrimaryKey
                tableName="department"
                columnNames="id"/>
        <addForeignKeyConstraint baseTableName="department"
                                 baseColumnNames="parent_id"
                                 constraintName="department_parent_id_fkey"
                                 referencedTableName="department"
                                 referencedColumnNames="id"/>
    </changeSet>

    <changeSet author="ypashynskyi" id="24">
        <sql>
            create table department_hi
            (
            op_name char(1) not null,
            op_user text not null,
            op_timestamp TIMESTAMPTZ not null
            )
            inherits (abstract_department);
        </sql>
        <rollback>
            drop table department_hi;
        </rollback>
    </changeSet>

    <changeSet author="ypashynskyi" id="25">
        <addPrimaryKey
                tableName="department_hi"
                columnNames="id,op_timestamp"/>
    </changeSet>

    <changeSet author="ypashynskyi" id="26">
        <createTable tableName="abstract_work_relationship"
                     remarks="Abstract table for work relationship data of a colleague.">
            <column name="colleague_uuid" type="${uuid_type}"
                    remarks="A unique identifier for every colleague. It is the user id present in Identity.">
                <constraints nullable="false"/>
            </column>
            <column name="location_uuid" type="${uuid_type}"
                    remarks="The unique identifier defined by location services and is the location code the colleague is assigned to based on their position."/>
            <column name="colleague_type" type="varchar(20)"
                    remarks="This value details the type of colleague.(EMPLOYEE, CONTRACTOR)"/>
            <column name="working_status" type="varchar(20)"
                    remarks="This field determines the working status of a colleague.(ACTIVE, INACTIVE, SUSPENDED, INACTIVE_PAID, UNKNOWN )"/>
            <column name="type" type="varchar(20)"
                    remarks="This field determines the type of the work relationship.(PRIMARY, SECONDARY)"/>
            <column name="manager_uuid" type="${uuid_type}"
                    remarks="Strategic identifier of a colleague's manager (manager's colleagueUUID)."/>
            <column name="employment_type" type="char(1)"
                    remarks="Indicates whether the worker is regular or temporary"/>
            <column name="is_manager" type="boolean"
                    remarks="Whether the colleague is manager or not."/>
            <column name="work_level" type="varchar(10)"
                    remarks="The colleague career level based on grade code."/>
            <column name="job_id" type="varchar(100)"
                    remarks="This specifies the link to colleague's job"/>
            <column name="position_id" type="varchar(100)"
                    remarks="This specifies the link to colleague's position"/>
            <column name="department_id" type="varchar(100)"
                    remarks="This specifies the link to colleague's department"/>
            <column name="grade_id" type="varchar(100)"
                    remarks="This specifies the link to colleague's grade"/>
        </createTable>
    </changeSet>

    <changeSet author="ypashynskyi" id="27">
        <sql>
            create table work_relationship
            (
            )
            inherits (abstract_work_relationship);
        </sql>
        <rollback>
            drop table work_relationship;
        </rollback>
    </changeSet>

    <changeSet author="ypashynskyi" id="28">
        <!--        Should be determined -->
    </changeSet>

    <changeSet author="ypashynskyi" id="29">
        <sql>
            create table work_relationship_hi
            (
            op_name char(1) not null,
            op_user text not null,
            op_timestamp TIMESTAMPTZ not null
            )
            inherits (abstract_work_relationship);
        </sql>
        <rollback>
            drop table work_relationship_hi;
        </rollback>
    </changeSet>

    <changeSet author="ypashynskyi" id="30">
        <!--        Should be determined -->
    </changeSet>

</databaseChangeLog>