plugins {
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
}

dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation project(':api')
    implementation project(':service')
    implementation project(':profile')
    implementation project(':event')

    implementation("org.mybatis.spring.boot:mybatis-spring-boot-starter:${springBootMybatisVersion}")
    implementation("org.springframework.boot:spring-boot-starter:${springBootVersion}")

    implementation("org.springdoc:springdoc-openapi-core:${openApiCoreVersion}")
    implementation("org.springdoc:springdoc-openapi-ui:${openApiUiVersion}")

    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-security")

    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'junit' // excluding junit 4
    }
    testImplementation("org.springframework.security:spring-security-test")

    testCompile project(':service').sourceSets.test.output

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation "com.github.database-rider:rider-junit5:${databaseRiderVersion}"
    testRuntimeOnly "org.liquibase:liquibase-core:${liquibaseVersion}"
    testRuntimeOnly project(':db-pma')
    testRuntimeOnly project(':security')
}


dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}