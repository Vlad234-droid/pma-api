plugins {
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
}

dependencies {
    implementation project(':api')
    implementation project(':spring')
    implementation project(':bpm')
    implementation project(':camunda')
    implementation project(':service')
    implementation project(':profile')

    implementation("org.springdoc:springdoc-openapi-core:${openApiCoreVersion}")
    implementation("org.springdoc:springdoc-openapi-ui:${openApiUiVersion}")

    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-security")

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation ("org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter:${camundaVersion}")
    implementation ("org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp:${camundaVersion}")

    implementation("org.apache.commons:commons-text:${commonsTextVersion}")

    testImplementation ("com.h2database:h2:${h2Version}")
    testImplementation ("com.zaxxer:HikariCP:${hikariVersion}")

    // to specify parent test dependencies
    testImplementation project(':camunda').sourceSets.test.output

    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}") {
        exclude group: 'junit' // excluding junit 4
    }
    testImplementation("commons-io:commons-io:${commonsIoVersion}")

    testImplementation project(':service').sourceSets.test.output

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation("org.springframework.security:spring-security-test")
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation "com.github.database-rider:rider-junit5:${databaseRiderVersion}"
    testRuntimeOnly "org.liquibase:liquibase-core:${liquibaseVersion}"
    testRuntimeOnly project(':db-pma')

    testRuntimeOnly("de.odysseus.juel:juel-api:${juelVersion}")
    testRuntimeOnly("de.odysseus.juel:juel-impl:${juelVersion}")
    testRuntimeOnly("de.odysseus.juel:juel-spi:${juelVersion}")
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}