<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tesco.pma.cycle.dao.PMColleagueCycleDAO">
    <resultMap id="colleagueCycleResultMap" type="com.tesco.pma.cycle.api.PMColleagueCycle">
        <id property="uuid" column="uuid"/>
        <result property="colleagueUuid" column="colleague_uuid"/>
        <result property="cycleUuid" column="cycle_uuid"/>
        <result property="status" column="status_id"
                typeHandler="com.tesco.pma.dao.utils.DictionaryItemTypeHandler"
                javaType="com.tesco.pma.cycle.api.PMCycleStatus"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="properties" column="properties"
                typeHandler="com.tesco.pma.dao.utils.jsonb.MapJsonbTypeHandler"
                javaType="com.tesco.pma.api.MapJson"/>
    </resultMap>

    <resultMap id="colleagueMap" type="com.tesco.pma.colleague.profile.domain.ColleagueEntity">
        <id column="uuid" property="uuid"/>
        <result column="first_name" property="firstName"/>
        <result column="middle_name" property="middleName"/>
        <result column="last_name" property="lastName"/>
        <result column="email" property="email"/>
        <result column="primary_entity" property="primaryEntity"/>
        <result column="salary_frequency" property="salaryFrequency"/>
        <result column="iam_source" property="iamSource"/>
        <result column="iam_id" property="iamId"/>
        <result column="manager_uuid" property="managerUuid"/>
        <result column="employment_type" property="employmentType"/>
        <result column="hire_date" property="hireDate"/>
        <result column="leaving_date" property="leavingDate"/>
        <result column="is_manager" property="manager"/>
        <association property="job" autoMapping="true" columnPrefix="j_"/>
        <association property="country" autoMapping="true" columnPrefix="co_"/>
        <association property="workLevel" autoMapping="true" columnPrefix="wl_"/>
        <association property="department" autoMapping="true" columnPrefix="d_"/>
    </resultMap>

    <select id="read" resultMap="colleagueCycleResultMap">
        SELECT uuid, colleague_uuid, cycle_uuid, status_id, start_time, end_time, properties
        FROM pm_colleague_cycle
        WHERE uuid = #{uuid}
    </select>

    <select id="getByParams" resultMap="colleagueCycleResultMap">
        SELECT uuid, colleague_uuid, cycle_uuid, status_id, start_time, end_time, properties
        FROM pm_colleague_cycle
        WHERE 1=1
        <if test="cycleUuid != null">
            AND cycle_uuid = #{cycleUuid}
        </if>
        <if test="colleagueUuid != null">
            AND colleague_uuid = #{colleagueUuid}
        </if>
        <if test="status != null">
            AND status_id = #{status, typeHandler=com.tesco.pma.dao.utils.DictionaryItemTypeHandler}
        </if>
    </select>

    <!--todo check exclude null case and replace with
        <if test="statusFilter != null and !statusFilter.isEmpty()">
            <if test="statusFilter != null and !statusFilter.isEmpty()">
                AND <if test="!statusFilter.isInclude()">NOT</if> (COALESCE(STATUS_ID, -999) = ANY(ARRAY
                <foreach collection="statusFilter.getItems()" item="s" index="i" open="[" separator="," close="]">
                    #{s.id}
                </foreach>
                ))
            </if>
        </if>
     -->
    <sql id="addStatusIdCondition">
        <if test="statusFilter != null and !statusFilter.isEmpty()">
            AND STATUS_ID <if test="!statusFilter.isInclude()">NOT</if> IN
            <foreach collection="statusFilter.getItems()" item="status" index="i" open="(" separator="," close=")">
                #{status.id}
            </foreach>
        </if>
    </sql>

    <select id="getByCycleUuidWithoutTimelinePoint" resultMap="colleagueCycleResultMap">
        SELECT cc.uuid, cc.colleague_uuid, cc.cycle_uuid, cc.status_id, cc.start_time, cc.end_time, cc.properties
        FROM pm_colleague_cycle cc
        WHERE cc.cycle_uuid = #{cycleUuid}
        <include refid="addStatusIdCondition" />
        AND NOT EXISTS(SELECT uuid
        FROM pm_timeline_point tp
        WHERE tp.colleague_cycle_uuid = cc.uuid)
    </select>

    <insert id="saveAll" flushCache="true" parameterType="java.util.Collection">
        INSERT INTO pm_colleague_cycle (uuid, colleague_uuid, cycle_uuid, status_id, start_time, end_time, properties)
        VALUES
        <foreach collection="colleagueCycles" item="cc" index="index" separator=",">
            (
            #{cc.uuid},
            #{cc.colleagueUuid},
            #{cc.cycleUuid},
            #{cc.status, typeHandler=com.tesco.pma.dao.utils.DictionaryItemTypeHandler, javaType=com.tesco.pma.cycle.api.PMCycleStatus},
            #{cc.startTime},
            #{cc.endTime},
            #{cc.properties, jdbcType=OTHER, typeHandler=com.tesco.pma.dao.utils.jsonb.MapJsonbTypeHandler}
            )
        </foreach>
    </insert>

    <update id="changeStatusForColleague" flushCache="true">
        UPDATE pm_colleague_cycle
        SET status_id =
                #{newStatus, typeHandler=com.tesco.pma.dao.utils.DictionaryItemTypeHandler, javaType=com.tesco.pma.cycle.api.PMCycleStatus}
        WHERE colleague_uuid = #{colleagueUuid}
          AND status_id =
              #{oldStatus, typeHandler=com.tesco.pma.dao.utils.DictionaryItemTypeHandler, javaType=com.tesco.pma.cycle.api.PMCycleStatus}
    </update>

    <insert id="create" flushCache="true">
        INSERT INTO pm_colleague_cycle (uuid, colleague_uuid, cycle_uuid, status_id, start_time, end_time, properties)
        VALUES (#{cc.uuid},
                #{cc.colleagueUuid},
                #{cc.cycleUuid},
                #{cc.status, typeHandler=com.tesco.pma.dao.utils.DictionaryItemTypeHandler, javaType=com.tesco.pma.cycle.api.PMCycleStatus},
                #{cc.startTime},
                #{cc.endTime},
                #{cc.properties, jdbcType=OTHER, typeHandler=com.tesco.pma.dao.utils.jsonb.MapJsonbTypeHandler})
        ON CONFLICT(colleague_uuid, cycle_uuid, status_id)
        WHERE status_id = 1
        DO NOTHING
    </insert>

    <insert id="update" flushCache="true">
        UPDATE pm_colleague_cycle
        SET colleague_uuid =#{cc.colleagueUuid},
            cycle_uuid=#{cc.cycleUuid},
            status_id=#{cc.status, typeHandler=com.tesco.pma.dao.utils.DictionaryItemTypeHandler, javaType=com.tesco.pma.cycle.api.PMCycleStatus},
            start_time#{cc.startTime},
            end_time=#{cc.endTime},
            properties=#{cc.properties, jdbcType=OTHER, typeHandler=com.tesco.pma.dao.utils.jsonb.MapJsonbTypeHandler}
        WHERE uuid = #{cc.uuid}
    </insert>

    <insert id="delete" flushCache="true">
        DELETE
        FROM pm_colleague_cycle
        WHERE uuid = #{uuid}
    </insert>

    <select id="findColleagues" resultMap="colleagueMap">
        SELECT c.uuid,
        c.first_name,
        c.middle_name,
        c.last_name,
        c.email,
        c.primary_entity,
        c.salary_frequency,
        c.iam_source,
        c.iam_id,
        c.manager_uuid,
        c.employment_type,
        c.hire_date,
        c.leaving_date,
        c.is_manager,
        j.id as j_id,
        j.code as j_code,
        j.name as j_name,
        j.cost_category as j_costCategory,
        co.code as co_code,
        co.name as co_name,
        wl.code as wl_code,
        wl.name as wl_name,
        d.id as d_id,
        d.name as d_name,
        d.business_type as d_businessType
        FROM colleague c
        LEFT JOIN job j ON j.id = c.job_id
        JOIN country co ON co.code = c.country_code
        LEFT JOIN work_level wl ON wl.code = c.work_level
        LEFT JOIN department d ON d.id = c.department_id
        <if test="statusFilter != null and !statusFilter.isEmpty()">
            LEFT JOIN pm_colleague_cycle pcc on c.uuid = pcc.colleague_uuid
        </if>
        <include refid="whereClauseFindColleagueByKey"/>

        <if test="statusFilter != null and !statusFilter.isEmpty()">
            <if test="statusFilter != null and !statusFilter.isEmpty()">
                AND <if test="!statusFilter.isInclude()">NOT</if> (COALESCE(STATUS_ID, -999) = ANY(ARRAY
                <foreach collection="statusFilter.getItems()" item="s" index="i" open="[" separator="," close="]">
                    #{s.id}
                </foreach>
                ))
            </if>
        </if>
    </select>

    <sql id="whereClauseFindColleagueByKey">
        <where>
            <choose>
                <when test="key == 'group'">
                    wl.code IN ('WL3', 'WL4', 'WL5')
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type != 'Bank'
                </when>
                <when test="key == 'group/ho_c'">
                    wl.code IN ('WL3', 'WL4', 'WL5')
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type IN ('Office', 'office','Store','Distribution')
                </when>
                <when test="key == 'group/ho_c/salaried'">
                    wl.code IN ('WL3', 'WL4', 'WL5')
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type IN ('Office', 'office','Store','Distribution')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'group/ho_c/salaried/wl3'">
                    wl.code = 'WL3'
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type IN ('Office', 'office','Store','Distribution')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'group/ho_c/salaried/wl4'">
                    wl.code = 'WL4'
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type IN ('Office', 'office','Store','Distribution')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'group/ho_c/salaried/wl5'">
                    wl.code = 'WL5'
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type IN ('Office', 'office','Store','Distribution')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk'">
                    co.code = 'GB'
                </when>
                <when test="key == 'uk/ho'">
                    co.code = 'GB'
                    AND d.business_type IN ('Office', 'office')
                </when>
                <when test="key == 'uk/ho/salaried'">
                    co.code = 'GB'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk/ho/salaried/wl1'">
                    co.code = 'GB'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'uk/ho/salaried/wl2'">
                    co.code = 'GB'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk/channels'">
                    co.code = 'GB'
                    AND d.business_type = 'Store'
                </when>
                <when test="key == 'uk/channels/salaried'">
                    co.code = 'GB'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk/channels/salaried/wl2_on_bonus'">
                    co.code = 'GB'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk/channels/salaried/wl2_tl'">
                    co.code = 'GB'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                    AND j.name IN ('Team Leader', 'Shift Leader')
                </when>
                <when test="key == 'uk/channels/salaried/wl1'">
                    co.code = 'GB'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'uk/channels/hp'">
                    co.code = 'GB'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'HOURLY'
                </when>
                <when test="key == 'uk/channels/hp/colleague'">
                    co.code = 'GB'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'HOURLY'
                </when>
                <when test="key == 'roi/ho_c'">
                    co.code = 'IE'
                    AND d.business_type IN ('Office', 'office', 'stores')
                </when>
                <when test="key == 'roi/ho_c/salaried'">
                    co.code = 'IE'
                    AND d.business_type IN ('Office', 'office', 'stores')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'roi/ho_c/salaried/wl1'">
                    co.code = 'IE'
                    AND d.business_type IN ('Office', 'office', 'stores')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'roi/ho_c/salaried/wl2'">
                    co.code = 'IE'
                    AND d.business_type IN ('Office', 'office', 'stores')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'india'">
                    co.code = 'IN'
                </when>
                <when test="key == 'india/ho'">
                    co.code = 'IN'
                    AND d.business_type IN ('Office', 'office')
                </when>
                <when test="key == 'india/ho/salaried'">
                    co.code = 'IN'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'india/ho/salaried/wl1'">
                    co.code = 'IN'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'india/ho/salaried/wl2'">
                    co.code = 'IN'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk_m'">
                    c.iam_source = 'UKMaintenance'
                </when>
                <when test="key == 'uk_m/salaried'">
                    c.iam_source = 'UKMaintenance'
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk_m/salaried/wl1'">
                    c.iam_source = 'UKMaintenance'
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'uk_m/salaried/wl2'">
                    c.iam_source = 'UKMaintenance'
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk_h_c'">
                    c.iam_source = 'UK Hospitality'
                </when>
                <when test="key == 'uk_h_c/ho'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                </when>
                <when test="key == 'uk_h_c/ho/salaried'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk_h_c/ho/salaried/wl1'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'uk_h_c/ho/salaried/wl2'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk_h_c/ho/hp'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'HOURLY'
                </when>
                <when test="key == 'uk_h_c/ho/hp/colleague'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'HOURLY'
                </when>
                <when test="key == 'uk_d'">
                    d.business_type IN ('depot', 'distribution')
                </when>
                <when test="key == 'uk_d/salaried'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk_d/salaried/wl1'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'uk_d/salaried/wl2'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk_d/hp_none_prod'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'HOURLY'
                    AND j.name IN ('Warehouse clerical', 'People advisor', 'Planning clerk', 'People safety trainer',
                    'Warehouse service co-ordinator','Store service co-ordinator')
                </when>
                <when test="key == 'uk_d/hp_none_prod/colleague'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'HOURLY'
                    AND j.name IN ('Warehouse clerical', 'People advisor', 'Planning clerk', 'People safety trainer',
                    'Warehouse service co-ordinator','Store service co-ordinator')
                </when>
                <when test="key == 'uk_d/hp_prod'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'HOURLY'
                    AND j.name = 'Warehouse operative'
                </when>
                <when test="key == 'uk_d/hp_prod/colleague'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'HOURLY'
                    AND j.name = 'Warehouse operative'
                </when>
                <when test="key == 'tb'">
                    c.primary_entity = 'Tesco Bank'
                </when>
                <when test="key == 'tb/ho'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                </when>
                <when test="key == 'tb/ho/salaried'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'tb/ho/salaried/wl1'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'tb/ho/salaried/wl2'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'tb/ho/salaried/wl3'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL3'
                </when>
                <when test="key == 'tb/ho/salaried/wl4'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL4'
                </when>
                <when test="key == 'tb/ho/salaried/wl5'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL5'
                </when>
                <when test="key == 'tm'">
                    c.primary_entity = 'Tesco Mobile'
                </when>
                <when test="key == 'tm/ho'">
                    c.primary_entity = 'Tesco Mobile'
                    AND d.business_type IN ('Office', 'office')
                </when>
                <when test="key == 'tm/ho/salaried'">
                    c.primary_entity = 'Tesco Mobile'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'tm/ho/salaried/wl1'">
                    c.primary_entity = 'Tesco Mobile'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'tm/ho/salaried/wl2'">
                    c.primary_entity = 'Tesco Mobile'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'tm/ho/salaried/wl3'">
                    c.primary_entity = 'Tesco Mobile'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL3'
                </when>

                <otherwise>1!=1</otherwise>
            </choose>
        </where>
    </sql>
</mapper>