<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tesco.pma.organisation.dao.ConfigEntryDAO">

    <resultMap id="configEntryStructure" type="com.tesco.pma.organisation.api.ConfigEntry">
        <id column="uuid" property="uuid"/>
        <result column="name" property="name"/>
        <result column="version" property="version"/>
        <result column="parent_uuid" property="parentUuid"/>
        <result column="composite_key" property="compositeKey"/>
        <association property="type" autoMapping="true" columnPrefix="t_"/>
    </resultMap>

    <resultMap id="colleagueMap" type="com.tesco.pma.colleague.profile.domain.ColleagueEntity">
        <id column="uuid" property="uuid"/>
        <result column="first_name" property="firstName"/>
        <result column="middle_name" property="middleName"/>
        <result column="last_name" property="lastName"/>
        <result column="email" property="email"/>
        <result column="primary_entity" property="primaryEntity"/>
        <result column="salary_frequency" property="salaryFrequency"/>
        <result column="iam_source" property="iamSource"/>
        <result column="iam_id" property="iamId"/>
        <result column="manager_uuid" property="managerUuid"/>
        <result column="employment_type" property="employmentType"/>
        <result column="hire_date" property="hireDate"/>
        <result column="leaving_date" property="leavingDate"/>
        <result column="is_manager" property="manager"/>
        <association property="job" autoMapping="true" columnPrefix="j_"/>
        <association property="country" autoMapping="true" columnPrefix="co_"/>
        <association property="workLevel" autoMapping="true" columnPrefix="wl_"/>
        <association property="department" autoMapping="true" columnPrefix="d_"/>
    </resultMap>

    <select id="findColleaguesByTypes" resultMap="colleagueMap">
        SELECT c.uuid,
        c.first_name,
        c.middle_name,
        c.last_name,
        c.email,
        c.primary_entity,
        c.salary_frequency,
        c.iam_source,
        c.iam_id,
        c.manager_uuid,
        c.employment_type,
        c.hire_date,
        c.leaving_date,
        c.is_manager,
        j.id as j_id,
        j.code as j_code,
        j.name as j_name,
        j.cost_category as j_costCategory,
        co.code as co_code,
        co.name as co_name,
        wl.code as wl_code,
        wl.name as wl_name,
        d.id as d_id,
        d.name as d_name,
        d.business_type as d_businessType
        FROM colleague c
        JOIN job j ON j.id = c.job_id
        JOIN country co ON co.code = c.country_code
        JOIN work_level wl ON wl.code = c.work_level
        JOIN department d ON d.id = c.department_id
        <where>
            <choose>
                <when test="key == 'group'">
                    wl.code IN ('WL3', 'WL4', 'WL5')
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type != 'Bank'
                </when>
                <when test="key == 'group/ho_c'">
                    wl.code IN ('WL3', 'WL4', 'WL5')
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type IN ('Office', 'office','Store','Distribution')
                </when>
                <when test="key == 'group/ho_c/salaried'">
                    wl.code IN ('WL3', 'WL4', 'WL5')
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type IN ('Office', 'office','Store','Distribution')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'group/ho_c/salaried/wl3'">
                    wl.code = 'WL3'
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type IN ('Office', 'office','Store','Distribution')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'group/ho_c/salaried/wl4'">
                    wl.code = 'WL4'
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type IN ('Office', 'office','Store','Distribution')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'group/ho_c/salaried/wl5'">
                    wl.code = 'WL5'
                    AND co.code IN ('GB', 'IE', 'IN')
                    AND d.business_type IN ('Office', 'office','Store','Distribution')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk'">
                    co.code = 'GB'
                </when>
                <when test="key == 'uk/ho'">
                    co.code = 'GB'
                    AND d.business_type IN ('Office', 'office')
                </when>
                <when test="key == 'uk/ho/salaried'">
                    co.code = 'GB'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk/ho/salaried/wl1'">
                    co.code = 'GB'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'uk/ho/salaried/wl2'">
                    co.code = 'GB'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk/channels'">
                    co.code = 'UK'
                    AND d.business_type = 'Store'
                </when>
                <when test="key == 'uk/channels/salaried'">
                    co.code = 'UK'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk/channels/salaried/wl2_on_bonus'">
                    co.code = 'UK'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk/channels/salaried/wl2_tl'">
                    co.code = 'UK'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                    AND j.name IN ('Team Leader', 'Shift Leader')
                </when>
                <when test="key == 'uk/channels/salaried/wl1'">
                    co.code = 'UK'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'uk/channels/hp'">
                    co.code = 'UK'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'HOURLY'
                </when>
                <when test="key == 'uk/channels/hp/colleague'">
                    co.code = 'UK'
                    AND d.business_type = 'Store'
                    AND c.salary_frequency = 'HOURLY'
                </when>
                <when test="key == 'roi/ho_c'">
                    co.code = 'IE'
                    AND d.business_type IN ('Office', 'office', 'stores')
                </when>
                <when test="key == 'roi/ho_c/salaried'">
                    co.code = 'IE'
                    AND d.business_type IN ('Office', 'office', 'stores')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'roi/ho_c/salaried/wl1'">
                    co.code = 'IE'
                    AND d.business_type IN ('Office', 'office', 'stores')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'roi/ho_c/salaried/wl2'">
                    co.code = 'IE'
                    AND d.business_type IN ('Office', 'office', 'stores')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'india'">
                    co.code = 'IN'
                </when>
                <when test="key == 'india/ho'">
                    co.code = 'IN'
                    AND d.business_type IN ('Office', 'office')
                </when>
                <when test="key == 'india/ho/salaried'">
                    co.code = 'IN'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'india/ho/salaried/wl1'">
                    co.code = 'IN'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'india/ho/salaried/wl2'">
                    co.code = 'IN'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk_m'">
                    c.iam_source = 'UKMaintenance'
                </when>
                <when test="key == 'uk_m/salaried'">
                    c.iam_source = 'UKMaintenance'
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk_m/salaried/wl1'">
                    c.iam_source = 'UKMaintenance'
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'uk_m/salaried/wl2'">
                    c.iam_source = 'UKMaintenance'
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk_h_c'">
                    c.iam_source = 'UK Hospitality'
                </when>
                <when test="key == 'uk_h_c/ho'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                </when>
                <when test="key == 'uk_h_c/ho/salaried'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk_h_c/ho/salaried/wl1'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'uk_h_c/ho/salaried/wl2'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk_h_c/ho/hp'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'HOURLY'
                </when>
                <when test="key == 'uk_h_c/ho/hp/colleague'">
                    c.iam_source = 'UK Hospitality'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'HOURLY'
                </when>
                <when test="key == 'uk_d'">
                    d.business_type IN ('depot', 'distribution')
                </when>
                <when test="key == 'uk_d/salaried'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'uk_d/salaried/wl1'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'uk_d/salaried/wl2'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'uk_d/hp_none_prod'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'HOURLY'
                    AND j.name IN ('Warehouse clerical', 'People advisor', 'Planning clerk', 'People safety trainer',
                    'Warehouse service co-ordinator','Store service co-ordinator')
                </when>
                <when test="key == 'uk_d/hp_none_prod/colleague'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'HOURLY'
                    AND j.name IN ('Warehouse clerical', 'People advisor', 'Planning clerk', 'People safety trainer',
                    'Warehouse service co-ordinator','Store service co-ordinator')
                </when>
                <when test="key == 'uk_d/hp_prod'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'HOURLY'
                    AND j.name = 'Warehouse operative'
                </when>
                <when test="key == 'uk_d/hp_prod/colleague'">
                    d.business_type IN ('depot', 'distribution')
                    AND c.salary_frequency = 'HOURLY'
                    AND j.name = 'Warehouse operative'
                </when>
                <when test="key == 'tb'">
                    c.primary_entity = 'Tesco Bank'
                </when>
                <when test="key == 'tb/ho'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                </when>
                <when test="key == 'tb/ho/salaried'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                </when>
                <when test="key == 'tb/ho/salaried/wl1'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL1'
                </when>
                <when test="key == 'tb/ho/salaried/wl2'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL2'
                </when>
                <when test="key == 'tb/ho/salaried/wl3'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL3'
                </when>
                <when test="key == 'tb/ho/salaried/wl4'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL4'
                </when>
                <when test="key == 'tb/ho/salaried/wl5'">
                    c.primary_entity = 'Tesco Bank'
                    AND d.business_type IN ('Office', 'office')
                    AND c.salary_frequency = 'ANNUAL'
                    AND wl.code = 'WL5'
                </when>

                <otherwise>1!=1</otherwise>
            </choose>
        </where>
    </select>

    <select id="findRootConfigEntry" resultMap="configEntryStructure">
        with recursive orgs as (
            select ce.uuid, ce.name, ce.type_id, ce.version, ce.parent_uuid, ce.composite_key, 0 as depth
            from config_entry ce
            where ce.uuid = #{uuid}
            union all
            select ce.uuid, ce.name, ce.type_id, ce.version, ce.parent_uuid, ce.composite_key, depth + 1 as depth
            from orgs
                     join config_entry ce on ce.uuid = orgs.parent_uuid
        )
        select o.uuid,
               o.name,
               o.type_id,
               o.version,
               o.composite_key,
               null            as parent_uuid,
               cet.id          as t_id,
               cet.code        as t_code,
               cet.description as t_description
        from orgs o
                 join config_entry_type cet on cet.id = o.type_id
        where depth = (select max(depth) from orgs)
    </select>

    <select id="getMaxVersionForRootEntry" resultType="int">
        SELECT COALESCE(MAX(version), 0)
        FROM config_entry
        WHERE name = #{name}
          AND type_id = #{typeId}
    </select>

    <select id="findConfigEntryParentStructure" resultMap="configEntryStructure">
        WITH RECURSIVE orgs AS (
            SELECT ce.uuid, name, ce.type_id, ce.version, ce.parent_uuid, ce.composite_key, 0 as depth
            FROM config_entry ce
            WHERE ce.uuid = #{uuid}
            UNION ALL
            SELECT ce.uuid, ce.name, ce.type_id, ce.version, ce.parent_uuid, ce.composite_key, depth + 1 as depth
            FROM orgs
                     JOIN config_entry ce ON ce.uuid = orgs.parent_uuid
        )
        SELECT o.uuid,
               o.name,
               o.type_id,
               o.version,
               o.parent_uuid,
               o.composite_key,
               cet.id          as t_id,
               cet.code        as t_code,
               cet.description as t_description
        FROM orgs o
                 join config_entry_type cet on cet.id = o.type_id
        ORDER BY depth DESC;
    </select>

    <select id="findConfigEntryChildStructure" resultMap="configEntryStructure">
        WITH RECURSIVE orgs AS (
            SELECT ce.uuid, name, ce.type_id, ce.version, ce.parent_uuid, ce.composite_key, 0 as depth
            FROM config_entry ce
            WHERE ce.uuid = #{uuid}
            UNION ALL
            SELECT ce.uuid, ce.name, ce.type_id, ce.version, ce.parent_uuid, ce.composite_key, depth + 1 as depth
            FROM orgs
                     JOIN config_entry ce ON ce.parent_uuid = orgs.uuid
        )
        SELECT o.uuid,
               o.name,
               o.type_id,
               o.version,
               o.parent_uuid,
               o.composite_key,
               cet.id          as t_id,
               cet.code        as t_code,
               cet.description as t_description
        FROM orgs o
                 join config_entry_type cet on cet.id = o.type_id
        ORDER BY depth ASC;
    </select>

    <select id="findPublishedConfigEntriesByKey" resultMap="configEntryStructure">
        SELECT ce.uuid,
               ce.name,
               ce.type_id,
               ce.version,
               ce.parent_uuid,
               ce.composite_key,
               cet.id          as t_id,
               cet.code        as t_code,
               cet.description as t_description
        FROM working_config_entry wce
                 JOIN config_entry ce ON wce.config_entry_uuid = ce.uuid
                 JOIN config_entry_type cet ON cet.id = wce.type_id
        WHERE wce.composite_key like #{key}
    </select>

    <select id="findConfigEntriesByKey" resultMap="configEntryStructure">
        SELECT ce.uuid,
               ce.name,
               ce.type_id,
               ce.version,
               ce.parent_uuid,
               ce.composite_key,
               cet.id          as t_id,
               cet.code        as t_code,
               cet.description as t_description
        FROM config_entry ce
                 JOIN config_entry_type cet ON cet.id = ce.type_id
        WHERE ce.composite_key like #{key}
    </select>

    <select id="findAllRootEntries" resultMap="configEntryStructure">
        SELECT ce.uuid,
               ce.name,
               ce.type_id,
               ce.version,
               ce.parent_uuid,
               ce.composite_key,
               cet.id          as t_id,
               cet.code        as t_code,
               cet.description as t_description
        FROM config_entry ce
                 JOIN config_entry_type cet ON cet.id = ce.type_id
        WHERE ce.parent_uuid is null
    </select>

    <select id="findConfigEntryType" resultType="com.tesco.pma.api.GeneralDictionaryItem">
        SELECT id, code, description
        FROM config_entry_type
        WHERE id = #{id}
    </select>

    <insert id="createConfigEntry" flushCache="true">
        INSERT INTO config_entry(uuid, name, type_id, version, parent_uuid, composite_key)
        VALUES (#{ce.uuid}, #{ce.name},
                #{ce.type.id},
                #{ce.version}, #{ce.parentUuid}, #{ce.compositeKey})
    </insert>

    <insert id="publishConfigEntry" flushCache="true">
        INSERT INTO working_config_entry(name, type_id, version, config_entry_uuid, composite_key)
        VALUES (#{wce.name},
                #{wce.type.id},
                #{wce.version}, #{wce.configEntryUuid}, #{wce.compositeKey})
    </insert>

    <delete id="unpublishConfigEntries" flushCache="true">
        DELETE
        FROM working_config_entry
        WHERE composite_key like #{key};
    </delete>

    <delete id="deleteConfigEntry" flushCache="true">
        DELETE
        FROM config_entry
        WHERE uuid = #{uuid};
    </delete>
</mapper>