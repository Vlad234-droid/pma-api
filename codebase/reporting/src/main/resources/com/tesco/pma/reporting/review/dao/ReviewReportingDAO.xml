<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tesco.pma.reporting.review.dao.ReviewReportingDAO">

    <resultMap id="objectiveResultMap" type="com.tesco.pma.reporting.review.domain.ObjectiveLinkedReviewData">
        <id property="colleagueUUID" column="employee_uuid"/>
        <result property="iamId" column="employee_no"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="surname"/>
        <result property="workLevel" column="working_level"/>
        <result property="jobTitle" column="job_title"/>
        <result property="lineManager" column="line_manager"/>
        <result property="objectiveNumber" column="objective_number"/>
        <result property="status" column="status" typeHandler="com.tesco.pma.dao.utils.DictionaryItemTypeHandler"
                javaType="com.tesco.pma.cycle.api.PMTimelinePointStatus"/>
        <result property="strategicDriver" column="strategic_driver"/>
        <result property="objectiveTitle" column="objective"/>
        <result property="howAchieved" column="how_achieved"/>
        <result property="howOverAchieved" column="how_over_achieved"/>
    </resultMap>

    <sql id="getFilterField">
        AND
        <choose>
            <when test="filter.property == 'year'">
                EXTRACT(YEAR FROM pc.start_time)
            </when>
            <when test="filter.property == 'statuses'">
                ptps.code
            </when>
        </choose>
    </sql>

    <sql id="getExpression">
        <choose>
            <when test="filter.operand.name == 'EQUALS' and (filter.property == 'year' or filter.property == 'statuses')">
                <include refid="getFilterField"/>
                = '${filter.value}'
            </when>
            <when test="filter.operand.name == 'IN' and filter.property == 'statuses'">
                <include refid="getFilterField"/>
                IN
                <include refid="prepareValues"/>
            </when>
        </choose>
    </sql>

    <sql id="prepareValues">
        <foreach item="value" collection="filter.value" separator="," open="(" close=")">
            <choose>
                <when test="filter.property == 'statuses'">
                    #{value}
                </when>
            </choose>
        </foreach>
    </sql>

    <select id="getLinkedObjectivesData" resultMap="objectiveResultMap">
        SELECT c1.iam_id as "employee_no",
        c1.uuid as "employee_uuid",
        c1.first_name as "first_name",
        c1.last_name as "surname",
        c1.work_level as "working_level",
        j.name as "job_title",
        c2.first_name||' '||c2.last_name as "line_manager",
        pr.number as "objective_number",
        pr.status_id as "status",
        pr.properties::json ->> 'strategic_driver' as "strategic_driver",
        pr.properties::json ->> 'title' as "objective",
        pr.properties::json ->> 'how_achieved' as "how_achieved",
        pr.properties::json ->> 'how_over_achieved' as "how_over_achieved"
        FROM colleague c1
        LEFT JOIN job j ON c1.job_id = j.id
        LEFT JOIN colleague c2 ON c1.manager_uuid = c2.uuid
        INNER JOIN pm_colleague_cycle pcc ON c1.uuid = pcc.colleague_uuid
        INNER JOIN pm_cycle pc ON pcc.cycle_uuid = pc.uuid
        INNER JOIN pm_timeline_point ptp ON pcc.uuid = ptp.colleague_cycle_uuid
        INNER JOIN pm_review pr ON ptp.uuid = pr.tl_point_uuid
        INNER JOIN pm_tl_point_status ptps ON pr.status_id = ptps.id
        WHERE pr.type_id = 1
        AND c1.work_level IN ('WL4', 'WL5')
        AND pc.type_id = 1

        <if test="!requestQuery.filters.isEmpty()">
            <foreach collection="requestQuery.filters" item="filter" index="index">
                <include refid="getExpression"/>
            </foreach>
        </if>
    </select>

</mapper>